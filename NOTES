USE CASES

A user has an ANSI color-capable terminal, and wants job information to appear
at the prompt in his Bourne-style shell. The user may achieve this by sourcing
the prompt-jobs script, which initializes settings to their defaults, and adds
colored job information to the command prompt.

A user wishes to keep their existing prompt, but add job information to it.
The user need only source the prompt-jobs script, which will determine an
intelligent prompt based on the current prompt setting.

A user is using a "dumb" terminal that doesn't support control sequences, but
still wants prompt-jobs. The prompt-jobs code should detect this condition and
print job information in the prompt without the use of terminal color codes.

A user is using a terminal that supports color codes, but a shell that isn't
capable of dealing with escape-sequences within the prompt. The prompt-jobs
code should detect this condition and print the job information on a line
preceding the rest of the job prompt (and not colorize that remainder).

A user wishes to change the colors or other settings from their defaults. The
user may source a prompt-jobs-config script that runs an interactive
configuration editor, allowing the user to tweak various settings, and
providing the option to save them persistently. Upon completion, these settings
should take effect immediately in the current shell instance.

A user has changed the prompt-jobs settings from their defaults in one
shell, and wishes for them to be reflected in another shell. A
straightforward mechanism should be provided that allows the current
shell to use the updated settings.

A user wishes to restore his prompt to what it was before the prompt-jobs
script was run. The user should be able to invoke a command that does this.

A user wishes jobs that start with a common word, such as "vim" or "pico", to
be listed by the /argument/ to that command, rather than the command name
itself. Perhaps in a slightly different color than usual, or something. This
should be configurable via prompt-jobs-config.

A user wishes jobs for commands beginning with "sudo" be colored specially to
indicate the elevated privileges. Prompt-jobs-config should enable this
behavior.

DEVELOPMENT NOTES

Idioms for protecting escape sequences:
    bash:   '\[...\]'
    zsh:    '%{...%}'
    ksh:    '^O^M^O...^O', where '^O' is any non-printing character.

In bash, these protection escapes can /not/ come from an expansion, but
must exist literally within PS1. Not a problem for ksh or zsh, which
will interpret these after interpolation. Bash can work-around using
PROMPT_JOBS.

Ksh88 may not support command substitution... perhaps a workaround can
be made to work /within/ parameter expansion? (No such problem with
pdksh, nor ksh93.)

Ksh can't handle the terminal codes; it needs a special and clunky
escapement, which possibly doesn't even work. UPDATE: a very special
syntax can be used to accomplish this, but it only works if you can find
a non-printing character with no visible terminal effects. At the
moment, SHIFT-OUT (octal 017) seems to be a suitable candidate (most
others have visible effects in xterm). The SHIFT-OUT control usually has
a meaning for most terminals, but its meaning is generally to shift into
the textual codeset (as opposed to graphical).  Still, I should do some
more research into the advisability of using this.

Pdksh doesn't emit POSIX-compliant "jobs" output (splits a pipeline
across lines), and so such things may not show up in the prompt list.
Zsh has the same problem, but doesn't affect the list as I actually use
special shell variables to generate the jobs listing. Hopefully I can
write a simple workaround into the jobs parsing code to make pdksh work.

TODO

Not having tput should just disable terminal codes, rather than killing
prompt-jobs. Possibly should support direct specification of escape
sequences.

Should support pdksh-style jobs output, so we can work correctly on
default setups of OpenBSD, etc.

Create configuring script.

Support special recognition of some commands, like sudo ("alert" jobs),
or editor commands ("alternate-color" jobs).
